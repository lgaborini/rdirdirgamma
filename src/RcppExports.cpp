// Generated by using Rcpp::compileAttributes() -> do not edit by hand
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <RcppGSL.h>
#include <Rcpp.h>

using namespace Rcpp;

// rdirichlet_cpp
Rcpp::NumericVector rdirichlet_cpp(Rcpp::NumericVector alpha);
RcppExport SEXP _rdirdirgamma_rdirichlet_cpp(SEXP alphaSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< Rcpp::NumericVector >::type alpha(alphaSEXP);
    rcpp_result_gen = Rcpp::wrap(rdirichlet_cpp(alpha));
    return rcpp_result_gen;
END_RCPP
}
// rdirdirgamma_cpp
RcppGSL::Matrix rdirdirgamma_cpp(const int& n, const int& m, const double& alpha_0, const double& beta_0, const Rcpp::NumericVector& nu_0);
RcppExport SEXP _rdirdirgamma_rdirdirgamma_cpp(SEXP nSEXP, SEXP mSEXP, SEXP alpha_0SEXP, SEXP beta_0SEXP, SEXP nu_0SEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< const int& >::type n(nSEXP);
    Rcpp::traits::input_parameter< const int& >::type m(mSEXP);
    Rcpp::traits::input_parameter< const double& >::type alpha_0(alpha_0SEXP);
    Rcpp::traits::input_parameter< const double& >::type beta_0(beta_0SEXP);
    Rcpp::traits::input_parameter< const Rcpp::NumericVector& >::type nu_0(nu_0SEXP);
    rcpp_result_gen = Rcpp::wrap(rdirdirgamma_cpp(n, m, alpha_0, beta_0, nu_0));
    return rcpp_result_gen;
END_RCPP
}
// sample_ABC_rdirdirgamma_cpp_internal
Rcpp::NumericVector sample_ABC_rdirdirgamma_cpp_internal(const int& n, const int& m, const double& alpha_0, const double& beta_0, const Rcpp::NumericVector& nu_0, const Rcpp::NumericMatrix& mtx_obs, const int& reps, const int& p_norm);
RcppExport SEXP _rdirdirgamma_sample_ABC_rdirdirgamma_cpp_internal(SEXP nSEXP, SEXP mSEXP, SEXP alpha_0SEXP, SEXP beta_0SEXP, SEXP nu_0SEXP, SEXP mtx_obsSEXP, SEXP repsSEXP, SEXP p_normSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< const int& >::type n(nSEXP);
    Rcpp::traits::input_parameter< const int& >::type m(mSEXP);
    Rcpp::traits::input_parameter< const double& >::type alpha_0(alpha_0SEXP);
    Rcpp::traits::input_parameter< const double& >::type beta_0(beta_0SEXP);
    Rcpp::traits::input_parameter< const Rcpp::NumericVector& >::type nu_0(nu_0SEXP);
    Rcpp::traits::input_parameter< const Rcpp::NumericMatrix& >::type mtx_obs(mtx_obsSEXP);
    Rcpp::traits::input_parameter< const int& >::type reps(repsSEXP);
    Rcpp::traits::input_parameter< const int& >::type p_norm(p_normSEXP);
    rcpp_result_gen = Rcpp::wrap(sample_ABC_rdirdirgamma_cpp_internal(n, m, alpha_0, beta_0, nu_0, mtx_obs, reps, p_norm));
    return rcpp_result_gen;
END_RCPP
}

static const R_CallMethodDef CallEntries[] = {
    {"_rdirdirgamma_rdirichlet_cpp", (DL_FUNC) &_rdirdirgamma_rdirichlet_cpp, 1},
    {"_rdirdirgamma_rdirdirgamma_cpp", (DL_FUNC) &_rdirdirgamma_rdirdirgamma_cpp, 5},
    {"_rdirdirgamma_sample_ABC_rdirdirgamma_cpp_internal", (DL_FUNC) &_rdirdirgamma_sample_ABC_rdirdirgamma_cpp_internal, 8},
    {NULL, NULL, 0}
};

RcppExport void R_init_rdirdirgamma(DllInfo *dll) {
    R_registerRoutines(dll, NULL, CallEntries, NULL, NULL);
    R_useDynamicSymbols(dll, FALSE);
}
